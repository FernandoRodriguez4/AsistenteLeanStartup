// Utilidades compartidas para todos los controllers

const handleError = (res, error, message = 'Error en la operaciÃ³n', statusCode = 500) => {
  console.error(message, error);
  res.status(statusCode).json({ 
    message, 
    error: error.message,
    success: false,
    stack: process.env.NODE_ENV === 'development' ? error.stack : undefined
  });
};

const validateRequiredFields = (fields, data) => {
  const missing = fields.filter(field => !data[field]);
  return missing.length === 0 ? null : `Campos requeridos: ${missing.join(', ')}`;
};

const validatePhase = (phase) => {
  const validPhases = ['construir', 'medir', 'aprender', 'pivotar', 'iterar'];
  return validPhases.includes(phase);
};

const logOperation = (operation, details) => {
  console.log(`${operation}: ${JSON.stringify(details)}`);
};
