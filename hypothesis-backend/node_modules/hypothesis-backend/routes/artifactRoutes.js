const express = require('express');
const router = express.Router();
const authMiddleware = require('../middleware/auth');
const artifactController = require('../controllers/artifactController');
const aiController = require('../controllers/aiController');

// Verifica que existan las funciones de controlador antes de usarlas
console.log('Funciones de artifactController:', Object.keys(artifactController));
console.log('Funciones de aiController:', Object.keys(aiController));

// Usar las rutas solo si las funciones existen
router.get('/:hypothesisId', authMiddleware, function(req, res) {
  // Versión temporal que luego reemplazaremos
  if (artifactController.getArtifactsByHypothesis) {
    return artifactController.getArtifactsByHypothesis(req, res);
  }
  res.json({ message: "Función temporal para obtener artefactos" });
});

// Ruta para generar artefactos con IA
router.post('/:hypothesisId/generate-ai/:phase', authMiddleware, function(req, res) {
  // Usar la función de IA si existe
  if (aiController.generateArtifactWithAI) {
    return aiController.generateArtifactWithAI(req, res);
  }
  // Función de respaldo si el controlador de IA no está disponible
  res.json({ 
    message: "Generación temporal de artefactos con IA",
    generatedContent: "Este es un artefacto generado temporalmente mientras solucionamos la integración con IA"
  });
});

// Mejorar artefacto con IA
router.post('/:id/improve', authMiddleware, function(req, res) {
  if (aiController.improveArtifactWithAI) {
    return aiController.improveArtifactWithAI(req, res);
  }
  res.json({ 
    message: "Mejora temporal con IA", 
    improvedContent: "Contenido mejorado simulado mientras arreglamos la integración con IA"
  });
});

// Las demás rutas que necesitas
router.post('/:hypothesisId/generate/:phase', authMiddleware, function(req, res) {
  if (artifactController.generateArtifacts) {
    return artifactController.generateArtifacts(req, res);
  }
  res.json({ message: "Generación temporal de artefactos plantilla" });
});

router.post('/:hypothesisId', authMiddleware, function(req, res) {
  if (artifactController.createArtifact) {
    return artifactController.createArtifact(req, res);
  }
  res.json({ message: "Creación temporal de artefacto" });
});

router.put('/:id', authMiddleware, function(req, res) {
  if (artifactController.updateArtifact) {
    return artifactController.updateArtifact(req, res);
  }
  res.json({ message: "Actualización temporal de artefacto" });
});

router.delete('/:id', authMiddleware, function(req, res) {
  if (artifactController.deleteArtifact) {
    return artifactController.deleteArtifact(req, res);
  }
  res.json({ message: "Eliminación temporal de artefacto" });
});

module.exports = router;