const express = require('express');
const cors = require('cors');
const dotenv = require('dotenv');
const { sequelize } = require('./models');

// Cargar variables de entorno
dotenv.config();

const app = express();

// Middleware
app.use(cors({
  origin: 'http://localhost:3000',
  methods: ['GET', 'POST', 'PUT', 'DELETE'],
  credentials: true,
  optionsSuccessStatus: 200
}));
app.use(express.json());

// Ruta de prueba para verificar funcionamiento básico
app.get('/api/test', (req, res) => {
  res.json({ message: 'API Test Route Working' });
});

// Rutas
app.use('/api/auth', require('./routes/authRoutes'));
app.use('/api/hypotheses', require('./routes/hypothesisRoutes'));
app.use('/api/artifacts', require('./routes/artifactRoutes'));

// Ruta para verificar que el servidor está funcionando
app.get('/', (req, res) => {
  res.send('API Running');
});

// Manejador de errores
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ message: 'Error interno del servidor', error: err.message });
});

const PORT = process.env.PORT || 5000;

sequelize.sync({ alter: true })
  .then(() => {
    console.log('Base de datos sincronizada (incluyendo ArtifactContext)');
    app.listen(PORT, () => console.log(`Servidor ejecutándose en el puerto ${PORT}`));
  })
  .catch(err => {
    console.error('Error al sincronizar la base de datos:', err);
  });